#!/bin/bash

set -eu

RAILS_ROOT=$(cd $(dirname $0)/../ && pwd)
DEV_COMPOSE_FILE="${RAILS_ROOT}/docker-compose.yml"
TEST_COMPOSE_FILE="${RAILS_ROOT}/dockerfiles/docker-compose.test.yml"

export BUILD_TAG=${BUILD_TAG:-'latest'}

function usage() {
  cat <<EOF
Usage:
  $(basename ${0} [command])

Commands:
  init        初期化する
  build       イメージをビルドする
  clean       コンテナをすべて破棄する
  start       サーバをバックグラウンドで起動する
  stop        サーバを停止する
  status      コンテナの起動状況を見る
  restart     サーバを再起動する
  logs        バックグラウンドで起動しているサーバのログを見る
  up          サーバをフォアグラウンドで起動する
  exec        springコンテナでコマンドを実行する
  test        テストを実行する
EOF
}

function build() {
  docker-compose build
}

function init() {
  docker-compose down --volumes --remove-orphans --rmi all
  docker-compose build
  docker-compose run --rm rails rails db:create db:schema:load
}

function clean() {
  docker-compose stop
  docker-compose rm --force
  docker-compose down --volumes --remove-orphans --rmi all

  docker-compose -f $TEST_COMPOSE_FILE stop
  docker-compose -f $TEST_COMPOSE_FILE rm --force
  docker-compose -f $TEST_COMPOSE_FILE down --volumes --remove-orphans --rmi all
}

function start() {
  docker-compose up -d rails
}

function stop() {
  docker-compose stop rails
}

function logs() {
  docker-compose logs rails
}

function restart() {
  start
  stop
}

function execute_command() {
  local pid=$(docker-compose ps -q spring)

  if [ -z "$pid" -o $(docker ps --quiet --filter id=${pid} | wc -l) -eq 0 ];then
    docker-compose up -d spring

    local message="waiting for spring start"

    while true
    do
      log=$(docker-compose logs spring | grep "started on /tmp/spring.sock" | wc -l)

      if [ $log -ge 1 ];then
        echo "spring the started!"
        break;
      fi

      message="$message."
      echo -e "\r$message\c"

      sleep 1
    done
  fi

  docker-compose exec spring $@
  exit $?
}

function status() {
  docker-compose ps
}

function up() {
  docker-compose up rails
}

function run_test() {
  export COMPOSE_FILE=$TEST_COMPOSE_FILE

  docker-compose down --volumes --remove-orphans
  docker-compose build
  docker-compose run --rm rails rails db:create db:schema:load
  docker-compose run --rm rails rspec
}

shift `expr $OPTIND - 1`

if [ $# -eq 0 ];then
  usage
  exit 1
fi

export COMPOSE_FILE=$DEV_COMPOSE_FILE

case "${1}" in
  "init")
    init
  ;;

  "build")
    build
  ;;

  "clean")
    clean
  ;;

  "start")
    start
  ;;

  "stop")
    stop
  ;;

  "status")
    status
  ;;

  "restart")
    restart
  ;;

  "logs")
    logs
  ;;

  "up")
    up
  ;;

  "test")
    run_test
  ;;

  "exec")
    shift

    execute_command $@
  ;;

  *)
    usage
    exit 1
  ;;
esac
